{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/movies.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","setMovies","useState","createMovie","isChanging","setIsChanging","error","setError","query","setQuery","setMovie","findMovie","then","result","Response","Title","Poster","Plot","imdbID","imbdUrl","inputText","encodeURI","toLowerCase","fetch","response","json","obj","htmlFor","type","id","placeholder","classNames","value","onChange","target","trimLeft","onKeyPress","event","preventDefault","onClick","newMovie","find","item","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.823e7896.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\nimport './FindMovie.scss';\n\nexport const FindMovie = ({ movies, setMovies }) => {\n  const [movie, createMovie] = useState(null);\n  const [isChanging, setIsChanging] = useState(false);\n  const [error, setError] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const setMovie = () => {\n    findMovie(query)\n      .then((result) => {\n        if (result.Response === 'False') {\n          setError(true);\n          setIsChanging(false);\n          createMovie(null);\n\n          return;\n        }\n\n        const { Title, Poster, Plot, imdbID } = result;\n\n        setIsChanging(true);\n        setError(false);\n        setQuery('');\n        createMovie({\n          ...result,\n          title: Title,\n          imgUrl: Poster,\n          description: Plot,\n          imbdUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      });\n  };\n\n  const findMovie = (inputText) => {\n    const result = getMovie(encodeURI(inputText.toLowerCase()))\n      .then(obj => ({ ...obj }));\n\n    return result;\n  };\n\n  const addMovie = (newMovie) => {\n    if (movies.find(item => item.imdbId === newMovie.imdbId)) {\n      return false;\n    }\n\n    setMovies([...movies, newMovie]);\n\n    return true;\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field for-search\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', ({ 'is-danger': error }))}\n              value={query}\n              onChange={({ target }) => {\n                setError(false);\n                setQuery(target.value.trimLeft());\n              }}\n              onKeyPress={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  setMovie();\n                }\n              }}\n            />\n          </div>\n          {error && ((error && isChanging && (\n            <p className=\"help is-danger\">\n              This movie already exist\n            </p>\n          )) || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ))\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={setMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (!movie) {\n                  return;\n                }\n\n                if (!addMovie(movie)) {\n                  setError(true);\n\n                  return;\n                }\n\n                setIsChanging(false);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isChanging && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.string.isRequired,\n  setMovies: PropTypes.func.isRequired,\n};\n","const MOVIES__URL = 'https://www.omdbapi.com/?t=';\nconst key = 'apikey=95d81992';\n\nexport const getMovie = title => fetch(`${MOVIES__URL}${title}&${key}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}